'#############################################################################
' Version 1.1 GI Bleeding protocol
' by Steven Saus 
' LICENSING INFO HERE - MIT LICENSE
'#############################################################################

Const VERSION	     As String = "v1.1 GI Bleeding Protocol" 

'#############################################################################
'    version history = 0.9a 3/4/5 - first working thing
'  0.9b - 4/18/05 fixed bug where loading only 1st 45 min would crash while 
'			looking for acc #
'  0.9c - 4/27/05 - took out subtraction views, put in option for delay 
'			STATICS (working), finished 5/20/05
'  0.9d - 5/23/05 - fix for < 45 min acquisitions.
'  			added error traps for 2nd 45 and such, added 1min/dyn 
'  1.0 - 8/9/05 - added modality checks
'			Removed extracted, erased subtraction parts of code
'  1.1 -March 2019 - Rewrite, allow for up to four dyn acquisitions, parse 
'			out first minute. Redid results series, added in version check
'#############################################################################

'#############################################################################
' Declarations
'#############################################################################

Option Compare Text
Dim mainScreen       As Screen   'The main screen
Dim mainVP()         As Viewport 'The viewports on the main screen
Dim number_of_vports As Integer  'The number of viewports
Dim MaxImages        As Integer
Dim Phases			 As Integer
Dim ImageItems()     As Image
Dim FirstMin	As Image
Dim accimage    As Image
Dim Dyn_Labels(4)  As Annot
Dim dbval As Variant
Dim bobtext(16) As Annot
Dim scr_str(3) As String ' scratch str
Dim scratch(1) As Variant 'variant scratch
Dim counter  As Integer
Dim counter1 As Integer
Dim done(4) As Boolean '(0 = 1st45, 1= 2nd45, 2 = third 45, 3 = 4th 45 )
Dim study1 As Study
Dim patientname As Variant  
Dim patientid As Variant
Dim seriesdate As Variant
Dim tech As String
Dim bobVP As Viewport
Dim series1 As series

Type Results                                      
	raw(6) As Image '(0 = 1st45, 1= 2nd45, 2 = third 45, 3 = 4th 45, 4 = 1st min, 5 = whole thing, )
	compressed(6) As Image '(0 = 1st45, 1= 2nd45, 2 = third 45, 3 = 4th 45, 4 = 1st min, 5 = whole thing, )
	techinit As String
	VERSION As String 'So I can do backward compatibility checks
	result_phases As String '(0 - 3)
End Type        

Dim gibleed_results As Results 

Function  DataValidate(dv_Message       As String,_
					   sel_image_list() As Image,_
					   numImages        As Integer) As Integer
'#############################################################################
' Data Validation
'#############################################################################
	Dim item As Integer
	Dim dbVal As Variant
	maxImages = 0
	Dim series2 As Series

	For item = 0 To numImages-1
		' begin fix here
		Set series2 = GetSeries(sel_image_list(item)) 
		retval = GetAttribValue(series2,"Modality",dbval,1)  
		If dbval = "OT" Then
			reval = SetAttribValue(series2,"Modality","NM",1)
			Save series2
		End If		
		' end Modality fix
		retval = GetAttribValue(series2,"SeriesID", dbval, 1)
		If dbval Like "*Results*" Then   ' Do not load result series yet
		Else
				MaxImages = MaxImages + 1
				Redim Preserve ImageItems(MaxImages)
				Set ImageItems(MaxImages -1) = sel_image_list(item)   ' had to change the imageitems bit here to get decent counts and no errors.
		End If      
	Next item
	dv_Message = "No Error message"
	DataValidate = 1
End Function   

Function separate_first_minute(inputb As Image, countb As Integer)
'#############################################################################
' Separate out first minute from first 45 min
'#############################################################################
	
	If inputb.Length = 105 Then  'sanity check
		'Extract first minute & copy to save structure	(NOT ImageItems)
		Set FirstMin = Extract(inputb,1,60,"First Minute")
		Set gibleed_results.raw(4) = Copy(FirstMin,"First Minute")
		'This is "compressed" here for the display loop so it works.
		Set gibleed_results.compressed(4) = Copy(FirstMin,"First Minute")
		'Extract stage 2 & back into ImageItems
		Set accimage = Extract(inputb,61,105,"First 45 Minutes")
		' Gets fed back into process_dyn, so not copying it now.
		' Set gibleed_results.raw(0) = Copy(accimage,"First 45 Minutes)
		Set ImageItems(countb) = Copy(accimage,"First 45 Minutes")
	End If
End Function

Function process_dyn(inputa As Image, order As Integer)
'#############################################################################
' Time to process the dynamics
'#############################################################################

	Set accimage = Copy(inputa,"for accession# purposes")
	scr_str(0) = "Raw dynamics #" & order
	scr_str(1) = "ANT 5min/fr dyn #" & order
	'copying raw image into save structure
	Set gibleed_results.raw(order-1) = Copy(inputa,scr_str(0)) 
	' compressing input image
	Set gibleed_results.compressed(order-1) = ReframeStep(inputa,5,5,scr_str(1))  
	' Marking our "done" variable
	Set done(order-1) = True
End Function    

Function process_append_dyn
'#############################################################################
' Calling this separately from the processing of dynamics since we have
' multiple possible variations of how many dynamics exist
'#############################################################################

	'Waterfall test here so there's no out of order results due to PEBCAK
	'I'm not sure if I can process and assign an image in the same command, so
	'I might have to add a lot of copying later on, but I hope not.
	If done(0) = True Then
		Set gibleed_results.compressed(5) = Copy(gibleed_results.compressed(0),"ANT 45m 5m/fr")
		Set gibleed_results.raw(5) = Copy(gibleed_results.raw(0),"ANT 45m 1m/fr")
		If done(1) = True Then
			Set gibleed_results.compressed(5) = AppendImage(gibleed_results.compressed(5),gibleed_results.compressed(1),"ANT 90m 5m/fr")
			Set gibleed_results.raw(5) = AppendImage(gibleed_results.raw(5),gibleed_results.raw(1),"ANT 90m 1m/fr")
			If done(2) = True Then
				Set gibleed_results.compressed(5) = AppendImage(gibleed_results.compressed(5),gibleed_results.compressed(2),"ANT 135m 5m/fr")
				Set gibleed_results.raw(5) = AppendImage(gibleed_results.raw(5),gibleed_results.raw(2),"ANT 135m 1m/fr")
				If done(3) = True Then
					Set gibleed_results.compressed(5) = AppendImage(gibleed_results.compressed(5),gibleed_results.compressed(1),"ANT 180m 5m/fr")
					Set gibleed_results.raw(5) = AppendImage(gibleed_results.raw(5),gibleed_results.raw(1),"ANT 180m 1m/fr")
				End If
			End If
		End If	
	End If
End Function

Function study_init_acc_num
'#############################################################################
' Retrieving/assigning the accession number and technologist initials 
'#############################################################################
	If gibleed_results.techinit = "" Then
		scr_str(0) = InputBox$("Technologist initials, please.","Tech Initials")
	    If (scr_str(0) = "") = False Then
	        gibleed_results.techinit = scr_str(0)
	    Else
	        gibleed_results.techinit = "NO TECH INITIALS"
		End If
	End If
	Set accimage = Copy(gibleed_results.raw(0),"for accession #")
	retval = GetAttribValue(accimage,"Patient","PatientName",patientname)
	retval = GetAttribValue(accimage,"Patient","PatientID",patientid)
	retval = GetAttribValue(accimage,"Series","SeriesDate",seriesdate)    
	retval = GetAttribValue(accimage, "Study", "AccessionNumber", dbval)
	If dbval = "" Then
		Set study1 = GetStudy(accimage)
		scr_str(0) = InputBox("Enter an Accession Number", "Accession Number", dbval)
		accession_number_loop:
		If (scr_str(0) = "") = False Then
			retval = SetAttribValue(study1, "AccessionNumber", scr_str(0), 1)
		Else
			scr_str(0) = InputBox("You MUST enter an Accession Number", "Accession Number", dbval)
			goto accession_number_loop
		End If
	End If
End Function

Function load_raw_data
'#############################################################################
' Load Raw Data
'#############################################################################

	For counter = 0 To MaxImages-1
		Load ImageItems(counter)
		retval = GetAttribValue(ImageItems(counter),"Dataset","DatasetType",dbval)          
		If dbval = 8 Then ' 8 is dynamic, 0 is static

			' *** Matching label to which part it is			
			retval = GetAttribValue(ImageItems(counter),"Dataset","DatasetName",dbval)
			If ImageItems(counter).Length = 105 Then
				'TODO Separate out first 60 seconds HERE
				scratch(0) = 1
				separate_first_minute(ImageItems(counter),counter)
			ElseIf ImageItems(counter).Length = 60 Then
				scratch(0) = 0			
			End If

			'This is a separate test so it catches where the first acq gets
			'dumped back into the process after extracting the first minute
			If ImageItems(counter).Length = 45 Then
				scr_str(0) = dbval
				matching_loop:  'lloooooooooooooooooooooooooooooooooooooop!
				scratch(0) = Switch(scr_str(0) Like "*first*",1,scr_str(0) Like "*1st*",1,_
							scr_str(0) Like "*2nd*",2,scr_str(0) Like "*second*",2,_
							scr_str(0) Like "*3rd*",3,scr_str(0) Like "*third*",3,_
							scr_str(0) Like "*4th*",4,scr_str(0) Like "*fourth*",4)
				If IsNull(scratch(0)) = True Then
					scr_str(1) = InputBox$("Is "  & scr_str(0) & " the first, second, third, or fourth set of images." & Chr(10) & Chr(13) &  "Which is it, first, second, third, or fourth?  Type QUIT to quit.", "Be Cool Stay In School")
					If scr_str(1) = "quit" Then
					ElseIf scr_str(1) = "" Then
					Else
						scr_str(0) = scr_str(1)
						GoTo matching_loop
					End If
				End If
				If done(CStr(scratch(0))-1) = True Then
					scr_str(1) = InputBox$("We already have results that correspond to image set #" & CStr(scratch(0)) & "." & Chr(10) & Chr(13) &  "Which shall " & dbval & ", replace, the first, second, third, or fourth?  Type QUIT to exit the program.", "Be Cool Stay In School")
					If scr_str(1) = "quit" Then  ' okay, not reassigning and giving another chance.  Nope.
					ElseIf scr_str(1) = "" Then
					Else
						scr_str(0) = scr_str(1)
						goto matching_loop
					End If
				End If
				' If you've hit quit a few too many times this test will fail.
				If IsNull(scratch(0)) = False Then
					counter1 = process_dyn(ImageItems(counter),Cstr(scratch(0)))
					' If false, will simply fail to assign it anywhere and exit sub
				End If
			End If
		End If	
	Next counter
End Function


Function load_our_results
'#############################################################################
' Load Results
'#############################################################################
	' Somewhat elaborate way to load results in without knowing their name
	done(3) = LoadResults(gibleed_results,"gibleed180_Results")
	If done(3) = true Then
		Set FirstMin = Copy(gibleed_results.raw(4),"First Minute")
		retval = process_dyn(gibleed_results.raw(0),1) 
		retval = process_dyn(gibleed_results.raw(1),2) 
		retval = process_dyn(gibleed_results.raw(2),3) 
		retval = process_dyn(gibleed_results.raw(3),4) 
	Else
		done(2) = LoadResults(gibleed_results,"gibleed135_Results") 
		If done(2) = true Then
			Set FirstMin = Copy(gibleed_results.raw(4),"First Minute")
			retval = process_dyn(gibleed_results.raw(0),1) 
			retval = process_dyn(gibleed_results.raw(1),2) 
			retval = process_dyn(gibleed_results.raw(2),3) 
		Else
			done(1) = LoadResults(gibleed_results,"gibleed90_Results")
			If done(1) = true Then
				Set FirstMin = Copy(gibleed_results.raw(4),"First Minute")
				retval = process_dyn(gibleed_results.raw(0),1) 
				retval = process_dyn(gibleed_results.raw(1),2) 
			Else
				done(0) = LoadResults(gibleed_results,"gibleed45_Results") 
				If done(0) = true Then
					Set FirstMin = Copy(gibleed_results.raw(4),"First Minute")
					retval = process_dyn(gibleed_results.raw(0),1) 
				End If
			End If
		End If
	End If
End Function

Function display_results(phase)
'#############################################################################
' Displaying results; choosing programatically here
'#############################################################################

	Set mainScreen=CreateScreen("basic1.rt")
	number_of_vports = ListViewPorts(mainScreen,mainVP)
	Display mainScreen
	Set mainVP(0) = GetViewport("cell1")
	If gibleed_results.compressed(phase) Is Nothing Then
		scratch(0) = "This data is not available/acquired."
		Set bobtext(0) = AnnotText(mainVP(0),0.25,0.25,scratch(0))
		bobtext(0).Font = LARGE_FONT
		' HOPE THE DOCUMENTATION IS RIGHT HERE.......
		Exit Function  
	Else
		Display gibleed_results.compressed(phase),"cell1"
		If phase < 4 Then
			VPFormat mainVP(0),3,3
		Else If phase = 4 Then
			VPFormat mainVP(0),6,10
		Else If phase = 5 Then
			' Multiple possible lengths here  '9, 18, 27, 36 = 3x3, 4x5, 5x6, 6x6
			If gibleed_results.compressed(phase).Length = 45 Then
				VPFormat mainVP(0),3,3
			Else If gibleed_results.compressed(phase).Length = 90 Then
				VPFormat mainVP(0),4,5
			Else If gibleed_results.compressed(phase).Length = 135 Then
				VPFormat mainVP(0),5,6
			Else If gibleed_results.compressed(phase).Length = 180 Then
				VPFormat mainVP(0),6,6
			End If
		End If
	End If
	
	Set Dyn_Labels(0) = AnnotText(mainVP(0),0,0.1,patientname & Chr(10) & Chr(13) & patientid,1)                        
	Set Dyn_Labels(1) = AnnotText(mainVP(0),0,0.1,Cstr(seriesdate),3)                        
	Set Dyn_Labels(2) = AnnotText(mainVP(0),0,0.1,gibleed_results.techinit,2)

	mainVP(0).Color =  LINEAR
	mainVP(0).LabelFormat = NUMBER_FORMAT
	retb=SelectTools(True,COLOURMAP_TOOL,SCROLL_TOOL,CINE_TOOL,PANZOOM_TOOL,ROI_TOOL)

End Function


Sub Main    
'#############################################################################
' Main control function
'#############################################################################
	Set mainScreen=CreateScreen("basic1.rt")
	number_of_vports = ListViewPorts(mainScreen,mainVP)
	Display mainScreen

	Set bobVP = GetViewport("cell1")
	scratch(0) = "Processing data.  Please wait."
	Set bobtext(0) = AnnotText(bobVP,0.25,0.25,scratch(0))
	bobtext(0).Font = LARGE_FONT
	
	retval = load_our_results
	'currently ignoring delay images as they're usually screencapped separately
	'calling functions here...
	retval = load_raw_data
	retval = process_append_data
	retval = study_init_acc_num
	Save study1

End Sub	

Sub save_it_all  
'#############################################################################
' Save your work
'#############################################################################
	
	If done(3) = true Then
		SaveResults gibleed_results,"gibleed180_Results"
		Set series1 = GetSeries(gibleed_results.raw(3))
		retval = GetAttribValue(gibleed_results.raw(3),"Series","Modality",dbVal)
		If dbVal = "OT" Then
			reval = SetAttribValue(series1,"Modality","NM",1)
			Save series1
		End If
	Else
		If done(2) = true Then
			SaveResults gibleed_results,"gibleed135_Results"
			Set series1 = GetSeries(gibleed_results.raw(2))
			retval = GetAttribValue(gibleed_results.raw(2),"Series","Modality",dbVal)
			If dbVal = "OT" Then
				reval = SetAttribValue(series1,"Modality","NM",1)
				Save series1
			End If

		Else
			If done(1) = true Then
				SaveResults gibleed_results,"gibleed90_Results"
				Set series1 = GetSeries(gibleed_results.raw(2))
				retval = GetAttribValue(gibleed_results.raw(2),"Series","Modality",dbVal)
				If dbVal = "OT" Then
					reval = SetAttribValue(series1,"Modality","NM",1)
					Save series1
				End If
			Else
				If done(0) = true Then
					SaveResults gibleed_results,"gibleed45_Results"
					Set series1 = GetSeries(gibleed_results.raw(0))
					retval = GetAttribValue(gibleed_results.raw(0),"Series","Modality",dbVal)
					If dbVal = "OT" Then
						reval = SetAttribValue(series1,"Modality","NM",1)
						Save series1
					End If
				End If
			End If
		End If
	End If
End Sub

'#############################################################################
' Using these subs as hackey variable passers; they each call the same display
' function with different variables.
'#############################################################################

Sub display_45
	display_results(0)
End Sub

Sub display_90
	display_results(1)
End Sub

Sub display_135
	display_results(2)
End Sub

Sub display_180
	display_results(3)
End Sub

Sub display_min
	display_results(4)
End Sub

Sub display_whole
	display_results(5)
End Sub

'#############################################################################
' TODO: Add licensing information
